{"version":3,"sources":["context/QuizContext.js","components/Footer.js","images/button-white.png","components/Landing.js","components/Question.js","components/ResponsesList.js","components/FooterBlack.js","components/Quiz.js","components/ResponsesSummary.js","components/EndScreen.js","services/getDataFromApi.js","components/App.js","index.js"],"names":["GameStateContext","createContext","Container","styled","ul","Item","li","Icon","a","Footer","href","target","rel","title","className","alt","div","Main","main","Title","h1","Subtitle","h2","Button","button","Image","img","Landing","setGameState","useContext","onClick","src","icon","List","Question","props","questions","currentQuestion","responses","correct_answer","incorrect_answers","sort","Math","random","question","map","response","index","option","setOptionChosen","userAnswers","ItemSection","section","ItemPara","p","ItemGrey","ResponsesList","userAnswer","Header","header","NextButton","FinishButton","Quiz","useState","setCurrentQuestion","optionChosen","score","setScore","counter","length","id","FooterBlack","Summary","ResponsesSummary","ScoreBox","Reset","EndScreen","setUserAnswers","getDataFromApi","fetch","then","json","data","results","trivialArt","he","decode","answer","catch","error","console","log","GlobalStyle","createGlobalStyle","App","setQuestions","gameState","useEffect","Provider","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1a603b1.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const GameStateContext = createContext('');\r\n","// Styles\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 40px;\r\n  font-size: 14px;\r\n  font-family: 'Roboto Condensed', sans-serif;\r\n  font-weight: 200;\r\n  @media (min-width: 768px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst Item = styled.li`\r\n  text-transform: uppercase;\r\n  margin-left: 5px;\r\n  margin-right: 5px;\r\n  @media (min-width: 768px) {\r\n    margin-left: 8px;\r\n    margin-right: 8px;\r\n  }\r\n\r\n  &:hover {\r\n    color: #fff;\r\n    text-shadow: 0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px green, 0 0 82px green, 0 0 92px green,\r\n      0 0 102px green, 0 0 151px green;\r\n    transform: scale(1.2);\r\n    transition: all 0.1s ease-in-out;\r\n  }\r\n`;\r\n\r\nconst Icon = styled.a`\r\n  color: white;\r\n`;\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Item>\r\n          <Icon\r\n            href=\"https://www.linkedin.com/in/laura-portillo-rodr%C3%ADguez-21965a86/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            title=\"linkedin\"\r\n          >\r\n            <i className=\"fa fa-linkedin\" alt=\"linkedin icon\"></i>\r\n          </Icon>\r\n        </Item>\r\n        <Item>\r\n          <Icon href=\"https://github.com/lauraportillo\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"github\">\r\n            <i className=\"fa fa-github-alt\" alt=\"github icon\"></i>\r\n          </Icon>\r\n        </Item>\r\n        <Item>\r\n          <Icon href=\"https://twitter.com/LauraPo02860847\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"twitter\">\r\n            <i className=\"fa fa-twitter\" alt=\"twitter icon\"></i>\r\n          </Icon>\r\n        </Item>\r\n        <Item>\r\n          <Icon href=\"mailto:lauraportillo.ark@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"email\">\r\n            <i className=\"fa fa-envelope\" alt=\"envelope icon\"></i>\r\n          </Icon>\r\n        </Item>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/button-white.f928d6cd.png\";","// React\r\nimport { useContext } from 'react';\r\nimport { GameStateContext } from '../context/QuizContext';\r\n// Components\r\nimport Footer from './Footer';\r\n// Styles\r\nimport styled from 'styled-components';\r\n// Images\r\nimport icon from '../images/button-white.png';\r\n\r\nconst Container = styled.div`\r\n  background-color: black;\r\n  min-height: 100vh;\r\n  display: grid;\r\n  grid-template-rows: auto 1fr auto;\r\n`;\r\n\r\nconst Main = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-family: 'Nixie One', cursive;\r\n  font-size: 40px;\r\n  font-weight: 400;\r\n  color: #fff;\r\n  text-shadow: 0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px green, 0 0 82px green, 0 0 92px green,\r\n    0 0 102px green, 0 0 151px green;\r\n  @media (min-width: 768px) {\r\n    font-size: 60px;\r\n  }\r\n`;\r\n\r\nconst Subtitle = styled.h2`\r\n  font-family: 'Roboto Condensed', sans-serif;\r\n  font-weight: 200;\r\n  font-size: 16px;\r\n  color: #fff;\r\n  margin-top: 20px;\r\n  @media (min-width: 768px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 40px;\r\n  height: 40px;\r\n  background: none;\r\n  color: inherit;\r\n  border: none;\r\n  font: inherit;\r\n  cursor: pointer;\r\n  outline: inherit;\r\n  margin-top: 40px;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    transition: all 0.1s ease-in-out;\r\n    opacity: 0.6;\r\n  }\r\n  @media (min-width: 768px) {\r\n    width: 50px;\r\n    height: 50px;\r\n    margin-top: 60px;\r\n  }\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n`;\r\n\r\nconst Landing = () => {\r\n  const { setGameState } = useContext(GameStateContext);\r\n  return (\r\n    <Container>\r\n      <header></header>\r\n      <Main>\r\n        <Title>arts&trivial</Title>\r\n        <Subtitle>Welcome to art trivial quiz!</Subtitle>\r\n\r\n        <Button\r\n          onClick={() => {\r\n            setGameState('playing');\r\n          }}\r\n        >\r\n          <Image title=\"Start\" src={icon} alt=\"start button\" />\r\n        </Button>\r\n      </Main>\r\n      <Footer />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","// React\r\nimport { useContext } from 'react';\r\nimport { GameStateContext } from '../context/QuizContext';\r\n// Styles\r\nimport styled from 'styled-components';\r\n\r\nconst Title = styled.h2`\r\n  font-family: 'Roboto Condensed', sans-serif;\r\n  font-size: 20px;\r\n  font-weight: 400;\r\n  color: black;\r\n  margin-top: 20px;\r\n  width: 280px;\r\n  text-align: center;\r\n  @media (min-width: 768px) {\r\n    font-size: 25px;\r\n    width: 300px;\r\n  }\r\n`;\r\nconst List = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family: 'Roboto Condensed', sans-serif;\r\n  font-size: 20px;\r\n  font-weight: 400;\r\n  color: black;\r\n  margin-top: 20px;\r\n`;\r\nconst Button = styled.button`\r\n  font-family: 'Roboto Condensed', sans-serif;\r\n  font-size: 14px;\r\n  color: black;\r\n  margin-bottom: 5px;\r\n  width: 190px;\r\n  height: 30px;\r\n  border-radius: 10px;\r\n  border: solid black 1px;\r\n  background-color: inherit;\r\n  text-align: center;\r\n  outline: inherit;\r\n  cursor: pointer;\r\n  position: relative;\r\n  &:hover {\r\n    opacity: 0.6;\r\n  }\r\n  &:active {\r\n    background-color: grey;\r\n    color: white;\r\n    top: 2px;\r\n  }\r\n  @media (min-width: 768px) {\r\n    font-size: 18px;\r\n    width: 240px;\r\n    height: 40px;\r\n    border-radius: 14px;\r\n  }\r\n`;\r\n\r\nconst Question = (props) => {\r\n  const { questions } = useContext(GameStateContext);\r\n\r\n  const chooseOption = (option) => {\r\n    props.setOptionChosen(option);\r\n    props.userAnswers[props.currentQuestion] = option;\r\n  };\r\n  if (!questions[props.currentQuestion].responses) {\r\n    questions[props.currentQuestion].responses = [\r\n      questions[props.currentQuestion].correct_answer,\r\n      ...questions[props.currentQuestion].incorrect_answers,\r\n    ];\r\n    // random responses\r\n    questions[props.currentQuestion].responses.sort(function () {\r\n      return Math.random() - 0.5;\r\n    });\r\n  }\r\n\r\n  const renderButton = () => {\r\n    return questions[props.currentQuestion].responses.map((response, index) => {\r\n      return (\r\n        <li key={index}>\r\n          <Button\r\n            onClick={() => {\r\n              chooseOption(response);\r\n            }}\r\n          >\r\n            {response}\r\n          </Button>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Title> {questions[props.currentQuestion].question}</Title>\r\n      <section>\r\n        <List>{renderButton()} </List>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","// React\r\nimport { useContext } from 'react';\r\nimport { GameStateContext } from '../context/QuizContext';\r\n// Styles\r\nimport styled from 'styled-components';\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  font-family: 'Roboto Condensed', sans-serif;\r\n  font-weight: 400;\r\n  color: black;\r\n  margin-top: 20px;\r\n  margin-bottom: 40px;\r\n  width: 190px;\r\n  @media (min-width: 768px) {\r\n    width: 240px;\r\n  }\r\n`;\r\n\r\nconst Item = styled.li`\r\n  font-family: 'Roboto Condensed', sans-serif;\r\n  font-size: 12px;\r\n  color: black;\r\n  margin-bottom: 3px;\r\n  @media (min-width: 768px) {\r\n    font-size: 14px;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst ItemSection = styled.section`\r\n  display: flex;\r\n  align-items: flex-start;\r\n`;\r\nconst ItemPara = styled.p`\r\n  margin-right: 5px;\r\n`;\r\nconst ItemGrey = styled.p`\r\n  margin-right: 5px;\r\n  color: grey;\r\n`;\r\n\r\nconst ResponsesList = () => {\r\n  const { questions, userAnswers } = useContext(GameStateContext);\r\n\r\n  return (\r\n    <List>\r\n      {userAnswers.map((userAnswer, index) => {\r\n        return (\r\n          <Item key={index}>\r\n            <ItemSection>\r\n              <ItemPara>{index + 1}</ItemPara>\r\n              <ItemPara>{userAnswer}</ItemPara>\r\n              <ItemGrey>\r\n                {userAnswer === questions[index].correct_answer ? (\r\n                  <i className=\"fa fa-check-circle\"></i>\r\n                ) : (\r\n                  <i className=\"fa fa-times-circle\"> </i>\r\n                )}\r\n              </ItemGrey>\r\n            </ItemSection>\r\n          </Item>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default ResponsesList;\r\n","// Styles\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 40px;\r\n  font-size: 14px;\r\n  font-family: 'Roboto Condensed', sans-serif;\r\n  font-weight: 200;\r\n  @media (min-width: 768px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst Item = styled.li`\r\n  text-transform: uppercase;\r\n  margin-left: 5px;\r\n  margin-right: 5px;\r\n  @media (min-width: 768px) {\r\n    margin-left: 8px;\r\n    margin-right: 8px;\r\n  }\r\n\r\n  &:hover {\r\n    color: #fff;\r\n    text-shadow: 0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px green, 0 0 82px green, 0 0 92px green,\r\n      0 0 102px green, 0 0 151px green;\r\n    transform: scale(1.2);\r\n    transition: all 0.1s ease-in-out;\r\n  }\r\n`;\r\n\r\nconst Icon = styled.a`\r\n  color: black;\r\n`;\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Item>\r\n          <Icon\r\n            href=\"https://www.linkedin.com/in/laura-portillo-rodr%C3%ADguez-21965a86/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            title=\"linkedin\"\r\n          >\r\n            <i className=\"fa fa-linkedin\" alt=\"linkedin icon\"></i>\r\n          </Icon>\r\n        </Item>\r\n        <Item>\r\n          <Icon href=\"https://github.com/lauraportillo\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"github\">\r\n            <i className=\"fa fa-github-alt\" alt=\"github icon\"></i>\r\n          </Icon>\r\n        </Item>\r\n        <Item>\r\n          <Icon href=\"https://twitter.com/LauraPo02860847\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"twitter\">\r\n            <i className=\"fa fa-twitter\" alt=\"twitter icon\"></i>\r\n          </Icon>\r\n        </Item>\r\n        <Item>\r\n          <Icon href=\"mailto:lauraportillo.ark@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"email\">\r\n            <i className=\"fa fa-envelope\" alt=\"envelope icon\"></i>\r\n          </Icon>\r\n        </Item>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","// React\r\nimport { useState } from 'react';\r\nimport { useContext } from 'react';\r\nimport { GameStateContext } from '../context/QuizContext';\r\n// Components\r\nimport Question from './Question';\r\nimport ResponsesList from './ResponsesList';\r\nimport FooterBlack from './FooterBlack';\r\n// Styles\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  min-height: 100vh;\r\n  display: grid;\r\n  grid-template-rows: auto 1fr auto;\r\n`;\r\nconst Header = styled.header`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst Title = styled.h1`\r\n  font-family: 'Nixie One', cursive;\r\n  font-size: 30px;\r\n  font-weight: 900;\r\n  color: black;\r\n  margin-top: 30px;\r\n  @media (min-width: 768px) {\r\n    font-size: 50px;\r\n    margin-top: 40px;\r\n  }\r\n`;\r\nconst Main = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst Subtitle = styled.h2`\r\n  font-family: 'Roboto Condensed', sans-serif;\r\n  font-size: 20px;\r\n  font-weight: 400;\r\n  color: black;\r\n  text-transform: uppercase;\r\n  margin-top: 20px;\r\n  @media (min-width: 768px) {\r\n    font-size: 25px;\r\n  }\r\n`;\r\nconst NextButton = styled.button`\r\n  font-family: 'Roboto Condensed', sans-serif;\r\n  font-size: 14px;\r\n  color: white;\r\n  margin-top: 20px;\r\n  width: 190px;\r\n  height: 30px;\r\n  border-radius: 10px;\r\n  border: solid black 1px;\r\n  background-color: black;\r\n  text-align: center;\r\n  outline: inherit;\r\n  cursor: pointer;\r\n  position: relative;\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n  &:active {\r\n    background-color: grey;\r\n    border: solid grey 1px;\r\n    top: 2px;\r\n  }\r\n  @media (min-width: 768px) {\r\n    font-size: 18px;\r\n    width: 240px;\r\n    height: 40px;\r\n    border-radius: 14px;\r\n  }\r\n`;\r\nconst FinishButton = styled.button`\r\n  font-family: 'Roboto Condensed', sans-serif;\r\n  font-size: 14px;\r\n  color: white;\r\n  margin-top: 20px;\r\n  width: 190px;\r\n  height: 30px;\r\n  border-radius: 10px;\r\n  border: solid black 1px;\r\n  background-color: black;\r\n  text-align: center;\r\n  outline: inherit;\r\n  cursor: pointer;\r\n  position: relative;\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n  &:active {\r\n    background-color: grey;\r\n    border: solid grey 1px;\r\n    top: 2px;\r\n  }\r\n  @media (min-width: 768px) {\r\n    font-size: 18px;\r\n    width: 240px;\r\n    height: 40px;\r\n    border-radius: 14px;\r\n  }\r\n`;\r\n\r\nconst Quiz = () => {\r\n  // State\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [optionChosen, setOptionChosen] = useState('');\r\n\r\n  const { questions, setGameState, score, setScore, userAnswers } = useContext(GameStateContext);\r\n\r\n  const nextQuestion = () => {\r\n    if (questions[currentQuestion].correct_answer === optionChosen) {\r\n      setScore(score + 1);\r\n    }\r\n    if (!userAnswers[currentQuestion]) {\r\n      userAnswers[currentQuestion] = 'skipped';\r\n    }\r\n    setCurrentQuestion(currentQuestion + 1);\r\n  };\r\n\r\n  const finishQuiz = () => {\r\n    if (questions[currentQuestion].correct_answer === optionChosen) {\r\n      setScore(score + 1);\r\n    }\r\n    setGameState('finished');\r\n  };\r\n\r\n  const counter = currentQuestion + 1;\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <Title>arts&trivial</Title>\r\n      </Header>\r\n      <Main>\r\n        <Subtitle> Question {counter} of 10</Subtitle>\r\n        <Question currentQuestion={currentQuestion} setOptionChosen={setOptionChosen} userAnswers={userAnswers} />\r\n        {currentQuestion === questions.length - 1 ? (\r\n          <FinishButton onClick={finishQuiz} id=\"finishQuiz\">\r\n            Finish Quiz\r\n          </FinishButton>\r\n        ) : (\r\n          <NextButton onClick={nextQuestion} id=\"nextQuestion\">\r\n            Next Question\r\n          </NextButton>\r\n        )}\r\n        <ResponsesList />\r\n      </Main>\r\n      <FooterBlack />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","// React\r\nimport { useContext } from 'react';\r\nimport { GameStateContext } from '../context/QuizContext';\r\n// Styles\r\nimport styled from 'styled-components';\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  font-family: 'Roboto Condensed', sans-serif;\r\n  font-weight: 400;\r\n  color: black;\r\n  margin-top: 20px;\r\n  margin-bottom: 40px;\r\n  width: 240px;\r\n  @media (min-width: 768px) {\r\n    width: 480px;\r\n    margin-top: 40px;\r\n  }\r\n`;\r\nconst Summary = styled.h2`\r\n  font-family: 'Roboto Condensed', sans-serif;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: black;\r\n  margin-bottom: 10px;\r\n  text-transform: uppercase;\r\n  @media (min-width: 768px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\nconst Item = styled.li`\r\n  font-family: 'Roboto Condensed', sans-serif;\r\n  font-size: 12px;\r\n  color: black;\r\n  margin-bottom: 3px;\r\n  @media (min-width: 768px) {\r\n    font-size: 14px;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst ItemSection = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n`;\r\nconst ItemPara = styled.p`\r\n  margin-bottom: 3px;\r\n`;\r\nconst ItemGrey = styled.p`\r\n  color: grey;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst ResponsesSummary = () => {\r\n  const { questions, userAnswers } = useContext(GameStateContext);\r\n\r\n  return (\r\n    <List>\r\n      <Summary>summary:</Summary>\r\n      {userAnswers.map((userAnswer, index) => {\r\n        return (\r\n          <Item key={index}>\r\n            <ItemSection>\r\n              <ItemPara>\r\n                {index + 1} {questions[index].question}\r\n              </ItemPara>\r\n              <ItemPara>Your answer: {userAnswer}</ItemPara>\r\n              <ItemGrey>Correct answer: {questions[index].correct_answer}</ItemGrey>\r\n            </ItemSection>\r\n          </Item>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default ResponsesSummary;\r\n","// React\r\nimport { useContext } from 'react';\r\nimport { GameStateContext } from '../context/QuizContext';\r\n// Components\r\nimport ResponsesSummary from './ResponsesSummary';\r\nimport FooterBlack from './FooterBlack';\r\n// Styles\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  min-height: 100vh;\r\n  display: grid;\r\n  grid-template-rows: auto 1fr auto;\r\n`;\r\nconst Header = styled.header`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst Title = styled.h1`\r\n  font-family: 'Nixie One', cursive;\r\n  font-size: 30px;\r\n  font-weight: 600;\r\n  color: black;\r\n  margin-top: 30px;\r\n  @media (min-width: 768px) {\r\n    font-size: 50px;\r\n    margin-top: 40px;\r\n  }\r\n`;\r\nconst Main = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst Subtitle = styled.h2`\r\n  font-family: 'Roboto Condensed', sans-serif;\r\n  font-size: 20px;\r\n  font-weight: 400;\r\n  color: black;\r\n  margin-top: 40px;\r\n  @media (min-width: 768px) {\r\n    font-size: 40px;\r\n  }\r\n`;\r\nconst ScoreBox = styled.h2`\r\n  font-family: 'Roboto Condensed', sans-serif;\r\n  font-size: 30px;\r\n  font-weight: 400;\r\n  margin-top: 20px;\r\n  color: white;\r\n  width: 120px;\r\n  height: 50px;\r\n  border-radius: 10px;\r\n  border: solid black 1px;\r\n  background-color: black;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  @media (min-width: 768px) {\r\n    font-size: 40px;\r\n    width: 240px;\r\n    height: 80px;\r\n    border-radius: 14px;\r\n    margin-top: 30px;\r\n  }\r\n`;\r\nconst Reset = styled.button`\r\n  font-family: 'Roboto Condensed', sans-serif;\r\n  font-size: 14px;\r\n  color: black;\r\n  margin-top: 20px;\r\n  width: 120px;\r\n  height: 30px;\r\n  border-radius: 10px;\r\n  border: solid black 1px;\r\n  background-color: inherit;\r\n  text-align: center;\r\n  outline: inherit;\r\n  cursor: pointer;\r\n  position: relative;\r\n  &:hover {\r\n    opacity: 0.6;\r\n  }\r\n  &:active {\r\n    background-color: grey;\r\n    color: white;\r\n    top: 2px;\r\n  }\r\n  @media (min-width: 768px) {\r\n    font-size: 18px;\r\n    width: 240px;\r\n    height: 40px;\r\n    border-radius: 14px;\r\n  }\r\n`;\r\n\r\nconst EndScreen = () => {\r\n  const { questions, setGameState, score, setScore, setUserAnswers } = useContext(GameStateContext);\r\n\r\n  const restartQuiz = () => {\r\n    setScore(0);\r\n    setGameState('menu');\r\n    setUserAnswers([]);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <Title>arts&trivial</Title>\r\n      </Header>\r\n      <Main>\r\n        <Subtitle>Here is your score!</Subtitle>\r\n        <ScoreBox>\r\n          {score} / {questions.length}\r\n        </ScoreBox>\r\n\r\n        <Reset onClick={restartQuiz}>Restart Quiz</Reset>\r\n        <ResponsesSummary />\r\n      </Main>\r\n      <FooterBlack />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EndScreen;\r\n","import he from 'he';\n\nconst getDataFromApi = () => {\n  return fetch('https://opentdb.com/api.php?amount=10&category=25')\n    .then((response) => response.json())\n    .then((data) => {\n      return data.results.map((trivialArt) => {\n        return {\n          question: he.decode(trivialArt.question),\n          correct_answer: he.decode(trivialArt.correct_answer),\n          incorrect_answers: trivialArt.incorrect_answers.map((answer) => he.decode(answer)),\n        };\n      });\n    })\n    .catch((error) => console.log(`an error has occurred: ${error}`));\n};\nexport default getDataFromApi;\n","// React\nimport { useEffect, useState } from 'react';\nimport { GameStateContext } from '../context/QuizContext';\n// Components\nimport Landing from './Landing';\nimport Quiz from './Quiz';\nimport EndScreen from './EndScreen';\n// Services\nimport getDataFromApi from '../services/getDataFromApi';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  text-decoration: none;\n  list-style: none;\n  font-family: Arial, Helvetica, sans-serif;\n  }\n`;\n\nconst App = () => {\n  // Global state\n  const [questions, setQuestions] = useState([]);\n  const [gameState, setGameState] = useState('menu');\n  const [score, setScore] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n\n  //vida del componente y promesa\n  useEffect(() => {\n    console.log(getDataFromApi());\n    getDataFromApi().then((data) => setQuestions(data));\n  }, []);\n\n  return (\n    <GameStateContext.Provider\n      value={{\n        questions,\n        gameState,\n        setGameState,\n        score,\n        setScore,\n        userAnswers,\n        setUserAnswers,\n      }}\n    >\n      <GlobalStyle />\n      {gameState === 'menu' && <Landing />}\n      {gameState === 'playing' && <Quiz />}\n      {gameState === 'finished' && <EndScreen />}\n    </GameStateContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}